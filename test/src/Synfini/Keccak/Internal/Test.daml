module Synfini.Keccak.Internal.Test where

import Daml.Script
import qualified DA.Action.State as S
import DA.Assert
import Synfini.Keccak.Internal
import Synfini.Keccak.Internal.Data

import DA.Math (logBase)

-- testKeccak_f : Script ()
-- testKeccak_f = do
--   let afterOneRound = S.execState (keccak_f 64) zeroState
--   let expectedAfterOneRound = [0xE7, 0xDD, 0xE1, 0x40, 0x79, 0x8F, 0x25, 0xF1, 0x8A, 0x47, 0xC0, 0x33, 0xF9, 0xCC, 0xD5, 0x84, 0xEE, 0xA9, 0x5A, 0xA6, 0x1E, 0x26, 0x98, 0xD5, 0x4D, 0x49, 0x80, 0x6F, 0x30, 0x47, 0x15, 0xBD, 0x57, 0xD0, 0x53, 0x62, 0x05, 0x4E, 0x28, 0x8B, 0xD4, 0x6F, 0x8E, 0x7F, 0x2D, 0xA4, 0x97, 0xFF, 0xC4, 0x47, 0x46, 0xA4, 0xA0, 0xE5, 0xFE, 0x90, 0x76, 0x2E, 0x19, 0xD6, 0x0C, 0xDA, 0x5B, 0x8C, 0x9C, 0x05, 0x19, 0x1B, 0xF7, 0xA6, 0x30, 0xAD, 0x64, 0xFC, 0x8F, 0xD0, 0xB7, 0x5A, 0x93, 0x30, 0x35, 0xD6, 0x17, 0x23, 0x3F, 0xA9, 0x5A, 0xEB, 0x03, 0x21, 0x71, 0x0D, 0x26, 0xE6, 0xA6, 0xA9, 0x5F, 0x55, 0xCF, 0xDB, 0x16, 0x7C, 0xA5, 0x81, 0x26, 0xC8, 0x47, 0x03, 0xCD, 0x31, 0xB8, 0x43, 0x9F, 0x56, 0xA5, 0x11, 0x1A, 0x2F, 0xF2, 0x01, 0x61, 0xAE, 0xD9, 0x21, 0x5A, 0x63, 0xE5, 0x05, 0xF2, 0x70, 0xC9, 0x8C, 0xF2, 0xFE, 0xBE, 0x64, 0x11, 0x66, 0xC4, 0x7B, 0x95, 0x70, 0x36, 0x61, 0xCB, 0x0E, 0xD0, 0x4F, 0x55, 0x5A, 0x7C, 0xB8, 0xC8, 0x32, 0xCF, 0x1C, 0x8A, 0xE8, 0x3E, 0x8C, 0x14, 0x26, 0x3A, 0xAE, 0x22, 0x79, 0x0C, 0x94, 0xE4, 0x09, 0xC5, 0xA2, 0x24, 0xF9, 0x41, 0x18, 0xC2, 0x65, 0x04, 0xE7, 0x26, 0x35, 0xF5, 0x16, 0x3B, 0xA1, 0x30, 0x7F, 0xE9, 0x44, 0xF6, 0x75, 0x49, 0xA2, 0xEC, 0x5C, 0x7B, 0xFF, 0xF1, 0xEA]
--   matrixToInts afterOneRound === expectedAfterOneRound

--   let afterTwoRounds = S.execState (keccak_f 64) afterOneRound
--   let expectedAfterTwoRounds = [0x3C, 0xCB, 0x6E, 0xF9, 0x4D, 0x95, 0x5C, 0x2D, 0x6D, 0xB5, 0x57, 0x70, 0xD0, 0x2C, 0x33, 0x6A, 0x6C, 0x6B, 0xD7, 0x70, 0x12, 0x8D, 0x3D, 0x09, 0x94, 0xD0, 0x69, 0x55, 0xB2, 0xD9, 0x20, 0x8A, 0x56, 0xF1, 0xE7, 0xE5, 0x99, 0x4F, 0x9C, 0x4F, 0x38, 0xFB, 0x65, 0xDA, 0xA2, 0xB9, 0x57, 0xF9, 0x0D, 0xAF, 0x75, 0x12, 0xAE, 0x3D, 0x77, 0x85, 0xF7, 0x10, 0xD8, 0xC3, 0x47, 0xF2, 0xF4, 0xFA, 0x59, 0x87, 0x9A, 0xF7, 0xE6, 0x9E, 0x1B, 0x1F, 0x25, 0xB4, 0x98, 0xEE, 0x0F, 0xCC, 0xFE, 0xE4, 0xA1, 0x68, 0xCE, 0xB9, 0xB6, 0x61, 0xCE, 0x68, 0x4F, 0x97, 0x8F, 0xBA, 0xC4, 0x66, 0xEA, 0xDE, 0xF5, 0xB1, 0xAF, 0x6E, 0x83, 0x3D, 0xC4, 0x33, 0xD9, 0xDB, 0x19, 0x27, 0x04, 0x54, 0x06, 0xE0, 0x65, 0x12, 0x83, 0x09, 0xF0, 0xA9, 0xF8, 0x7C, 0x43, 0x47, 0x17, 0xBF, 0xA6, 0x49, 0x54, 0xFD, 0x40, 0x4B, 0x99, 0xD8, 0x33, 0xAD, 0xDD, 0x97, 0x74, 0xE7, 0x0B, 0x5D, 0xFC, 0xD5, 0xEA, 0x48, 0x3C, 0xB0, 0xB7, 0x55, 0xEE, 0xC8, 0xB8, 0xE3, 0xE9, 0x42, 0x9E, 0x64, 0x6E, 0x22, 0xA0, 0x91, 0x7B, 0xDD, 0xBA, 0xE7, 0x29, 0x31, 0x0E, 0x90, 0xE8, 0xCC, 0xA3, 0xFA, 0xC5, 0x9E, 0x2A, 0x20, 0xB6, 0x3D, 0x1C, 0x4E, 0x46, 0x02, 0x34, 0x5B, 0x59, 0x10, 0x4C, 0xA4, 0x62, 0x4E, 0x9F, 0x60, 0x5C, 0xBF, 0x8F, 0x6A, 0xD2, 0x6C, 0xD0, 0x20]
--   matrixToInts afterTwoRounds === expectedAfterTwoRounds

--   where
--     matrixToInts mat = do
--       y <- [0..4]
--       x <- [0..4]
--       laneToBytes 64 (mat ## (x, y))
